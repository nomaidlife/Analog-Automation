"use client"; import React,{useEffect,useState} from "react"; import {Button} from "@/components/ui/button"; import {Input} from "@/components/ui/input";
const BACKEND_URL = process.env.NEXT_PUBLIC_BACKEND_URL || "http://localhost:8000";
type Filters={last_n_years:number;exclude_oncology:boolean;route_exact:boolean;chronic_only:boolean;ta_include:string[]|null;approval_market:string};
type Candidate={product_id?:number;brand_name:string;us_approval_year?:number;ta?:string;route?:string;chronic_use?:boolean;entry_rank?:number;score:number;partials:any;pivotal_summary?:any};
export default function Page(){ const [q,setQ]=useState(""); const [data,setData]=useState<any>(null); const [loading,setLoading]=useState(false);
 async function run(){ setLoading(true); try{ const nl=await fetch(`${BACKEND_URL}/nl2search`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({query:q})}).then(r=>r.json()); const body=nl.structured; const res=await fetch(`${BACKEND_URL}/analogs/search`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(body)}).then(r=>r.json()); setData(res);}finally{ setLoading(false);} }
 return (<div className="max-w-5xl mx-auto p-6 space-y-4"><h1 className="text-2xl font-semibold">Analog Generator</h1><div className="flex gap-2"><Input value={q} onChange={e=>setQ(e.target.value)} placeholder="Type a brand/generic/indication"/><Button onClick={run} disabled={loading}>{loading?"Searching…":"Search"}</Button></div>
 <div className="rounded-2xl border overflow-hidden">{data?.results?<table className="w-full text-sm"><thead><tr><th className="p-2 text-left">Asset</th><th className="p-2 text-left">Year</th><th className="p-2 text-left">TA</th><th className="p-2 text-left">Route</th><th className="p-2 text-left">Score</th></tr></thead><tbody>{data.results.map((r:Candidate)=>(<tr key={r.brand_name} className="border-t"><td className="p-2">{r.brand_name}</td><td className="p-2">{r.us_approval_year??"—"}</td><td className="p-2">{r.ta??"—"}</td><td className="p-2">{r.route??"—"}</td><td className="p-2">{(r.score*100).toFixed(0)}</td></tr>))}</tbody></table>:<div className="p-6 text-sm text-gray-500">No results yet.</div>}</div></div>); }